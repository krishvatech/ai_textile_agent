"""Upgrade existing table

Revision ID: 204d18f9b0e7
Revises: f16608ee5a91
Create Date: 2025-08-04 16:23:45.413675

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '204d18f9b0e7'
down_revision: Union[str, Sequence[str], None] = 'f16608ee5a91'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_variants',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('product_id', sa.Integer(), nullable=False),
        sa.Column('color', sa.String(), nullable=True),
        sa.Column('size', sa.String(), nullable=True),
        sa.Column('fabric', sa.String(), nullable=True),
        sa.Column('price', sa.Float(), nullable=True),
        sa.Column('available_stock', sa.Integer(), nullable=False),
        sa.Column('is_rental', sa.Boolean(), nullable=False),
        sa.Column('rental_price', sa.Float(), nullable=True),
        sa.Column('image_url', sa.String(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('occasions', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_variants_product_id'), 'product_variants', ['product_id'], unique=False)
    op.create_table('rentals',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('product_variant_id', sa.Integer(), nullable=False),
        sa.Column('rental_start_date', sa.DateTime(), nullable=False),
        sa.Column('rental_end_date', sa.DateTime(), nullable=False),
        sa.Column('rental_price', sa.Float(), nullable=False),
        sa.Column('status', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['product_variant_id'], ['product_variants.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rentals_product_variant_id'), 'rentals', ['product_variant_id'], unique=False)
    
    # Fix for NOT NULL column "name":
    # Step 1: Add 'name' as nullable
    op.add_column('products', sa.Column('name', sa.String(), nullable=True))
    # Step 2: Set a default value for existing rows (adjust as needed)
    op.execute("UPDATE products SET name = 'default_name' WHERE name IS NULL")
    # Step 3: Alter 'name' to be NOT NULL
    op.alter_column('products', 'name', nullable=False)
    
    # Add 'description' as nullable (should be fine)
    op.add_column('products', sa.Column('description', sa.String(), nullable=True))
    
    op.drop_index(op.f('idx_products_tenant_id'), table_name='products')
    op.drop_constraint(op.f('products_sku_key'), 'products', type_='unique')
    op.drop_column('products', 'price')
    op.drop_column('products', 'color')
    op.drop_column('products', 'description_gu')
    op.drop_column('products', 'description_en')
    op.drop_column('products', 'rental_price')
    op.drop_column('products', 'name_gu')
    op.drop_column('products', 'sku')
    op.drop_column('products', 'is_active')
    op.drop_column('products', 'description_hi')
    op.drop_column('products', 'name_hi')
    op.drop_column('products', 'is_rental')
    op.drop_column('products', 'available_stock')
    op.drop_column('products', 'image_url')
    op.drop_column('products', 'name_en')
    op.drop_column('products', 'meta_data')
    # ### end Alembic commands ###



def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('products', sa.Column('meta_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('name_en', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('products', sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('available_stock', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('is_rental', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('name_hi', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('description_hi', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('sku', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('name_gu', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('rental_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('description_en', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('description_gu', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('color', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.create_unique_constraint(op.f('products_sku_key'), 'products', ['sku'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_products_tenant_id'), 'products', ['tenant_id'], unique=False)
    op.drop_column('products', 'description')
    op.drop_column('products', 'name')
    op.drop_index(op.f('ix_rentals_product_variant_id'), table_name='rentals')
    op.drop_table('rentals')
    op.drop_index(op.f('ix_product_variants_product_id'), table_name='product_variants')
    op.drop_table('product_variants')
    # ### end Alembic commands ###
