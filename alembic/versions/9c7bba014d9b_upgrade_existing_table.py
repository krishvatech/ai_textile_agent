"""Upgrade existing table

Revision ID: 9c7bba014d9b
Revises: 204d18f9b0e7
Create Date: 2025-08-04 16:52:06.990387

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9c7bba014d9b'
down_revision: Union[str, Sequence[str], None] = '204d18f9b0e7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

rentalstatus = postgresql.ENUM('active', 'returned', 'cancelled', name='rentalstatus')


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    rentalstatus.create(op.get_bind(), checkfirst=True)
    op.create_table('occasions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('chat_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('transcript', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_images_product_id'), 'product_images', ['product_id'], unique=False)
    op.create_table('product_variant_occasions',
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.Column('occasion_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['occasion_id'], ['occasions.id'], ),
    sa.ForeignKeyConstraint(['variant_id'], ['product_variants.id'], ),
    sa.PrimaryKeyConstraint('variant_id', 'occasion_id')
    )
    op.create_table('feedbacks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comments', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('customers', sa.Column('loyalty_points', sa.Integer(), nullable=True))
    op.add_column('orders', sa.Column('product_variant_id', sa.Integer(), nullable=False))
    op.alter_column('orders', 'status',
               existing_type=postgresql.ENUM('placed', 'paid', 'shipped', 'rented', 'returned', 'cancelled', name='orderstatus'),
               nullable=False)
    op.drop_constraint(op.f('orders_product_id_fkey'), 'orders', type_='foreignkey')
    op.create_foreign_key(None, 'orders', 'product_variants', ['product_variant_id'], ['id'])
    op.drop_column('orders', 'product_id')
    op.alter_column('product_variants', 'color',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('product_variants', 'size',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('product_variants', 'fabric',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('product_variants', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.create_index('idx_variant_color_size_fabric', 'product_variants', ['color', 'size', 'fabric'], unique=False)
    op.create_index(op.f('ix_product_variants_color'), 'product_variants', ['color'], unique=False)
    op.create_index(op.f('ix_product_variants_fabric'), 'product_variants', ['fabric'], unique=False)
    op.create_index(op.f('ix_product_variants_size'), 'product_variants', ['size'], unique=False)
    op.create_unique_constraint('uix_variant', 'product_variants', ['product_id', 'color', 'size', 'fabric'])
    op.drop_column('product_variants', 'occasions')
    op.alter_column('rentals', 'status',
        existing_type=sa.VARCHAR(),
        type_=rentalstatus,
        existing_nullable=True,
        postgresql_using='status::text::rentalstatus')
    op.create_index(op.f('ix_rentals_status'), 'rentals', ['status'], unique=False)
    op.alter_column('tenants', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('tenants', 'whatsapp_number',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('superadmin', 'tenant_admin', 'staff', name='userrole'),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('rentals', 'status',
        existing_type=rentalstatus,
        type_=sa.VARCHAR(),
        existing_nullable=True)
    rentalstatus.drop(op.get_bind(), checkfirst=True)
    op.alter_column('tenants', 'whatsapp_number',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('tenants', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index(op.f('ix_rentals_status'), table_name='rentals')
    op.alter_column('rentals', 'status',
               existing_type=sa.Enum('active', 'returned', 'cancelled', name='rentalstatus'),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.add_column('product_variants', sa.Column('occasions', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint('uix_variant', 'product_variants', type_='unique')
    op.drop_index(op.f('ix_product_variants_size'), table_name='product_variants')
    op.drop_index(op.f('ix_product_variants_fabric'), table_name='product_variants')
    op.drop_index(op.f('ix_product_variants_color'), table_name='product_variants')
    op.drop_index('idx_variant_color_size_fabric', table_name='product_variants')
    op.alter_column('product_variants', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('product_variants', 'fabric',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('product_variants', 'size',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('product_variants', 'color',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('orders', sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.create_foreign_key(op.f('orders_product_id_fkey'), 'orders', 'products', ['product_id'], ['id'])
    op.alter_column('orders', 'status',
               existing_type=postgresql.ENUM('placed', 'paid', 'shipped', 'rented', 'returned', 'cancelled', name='orderstatus'),
               nullable=True)
    op.drop_column('orders', 'product_variant_id')
    op.drop_column('customers', 'loyalty_points')
    op.drop_table('feedbacks')
    op.drop_table('product_variant_occasions')
    op.drop_index(op.f('ix_product_images_product_id'), table_name='product_images')
    op.drop_table('product_images')
    op.drop_table('chat_sessions')
    op.drop_table('occasions')
    # ### end Alembic commands ###
